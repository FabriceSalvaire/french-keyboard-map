// -*- c -*-
// Copyright (c) 2003 Salvaire Fabrice : GPL

// Réf: G81-3000LPNEU-1 / 00
// us 104 touches

// path : /usr/share/X11/xkb/symbols / cherry_fr_xorg

// setxkbmap -v 10 -rules xorg -model pc104 -layout us
// cp cherry_fr_xorg /usr/share/X11/xkb/symbols/cherry_fr_xorg
// setxkbmap -v 10 -rules xorg -model pc104 -layout cherry_fr_xorg

default
xkb_symbols "pc104" {
  // utilise les définitions standard
  include "pc(pc105)"
  // include "keypad(x11)"

  name[Group1]="Cherry";

  include "fr_cherry(modifier)"
  include "fr_cherry(edition)"
  include "fr_cherry(fr)"
  include "fr_cherry(symbols)"
  include "fr_cherry(keypad)"
  include "fr_cherry(greek)"
};

partial hidden alphanumeric_keys
xkb_symbols "modifier" {
  ///////////////////////////////////////////////////////////
  //
  // à droite
  //
  key <LWIN> { [ dead_circumflex, dead_diaeresis  ]  };

  ///////////////////////////////////////////////////////////
  //
  // à gauche
  //
  // key <RALT> { [ Alt_R          , Meta_R          ]  }; // default
  // key <RALT> { [ Mode_switch    , Multi_key       ]  };
  key <RWIN> { [ Mode_switch    , Multi_key       ]  };
  key <MENU> { [ Mode_switch    , Multi_key       ]  };
  // key <MENU> { [ Compose                          ]  };
};

partial hidden alphanumeric_keys
xkb_symbols "edition" {
  ///////////////////////////////////////////////////////////
  //
  // Bloc d'édition
  //
  key <INS>  { [ Delete                           ]  };

  ///////////////////////////////////////////////////////////
  //
  // Bloc 3 touches
  //
  key <SCLK> { [ Insert                           ]  };
  key <PAUS> { [ Insert                           ]  };
};

partial hidden alphanumeric_keys
xkb_symbols "fr" {
  ///////////////////////////////////////////////////////////
  //
  // 2ème rangé
  //
  key <AD01> { [ a              , A               ]  };
  key <AD02> { [ z              , Z               ]  };
  key <AD03> { [ e              , E               ],
               [ EuroSign       , Greek_epsilon   ]  }; // € ε
  key <AD04> { [ r              , R               ]  };
  key <AD05> { [ t              , T               ]  };
  key <AD06> { [ y              , Y               ]  };
  key <AD07> { [ u              , U               ]  };
  key <AD08> { [ i              , I               ]  };
  key <AD09> { [ o              , O               ],
               [ oe             , OE              ]  };
  key <AD10> { [ p              , P               ]  };

  ///////////////////////////////////////////////////////////
  //
  // 3ème rangé
  //
  key <AC01> { [ q              , Q               ]  };
  key <AC02> { [ s              , S               ],
               [ ssharp                           ]  }; // ess-tsett ß
  key <AC03> { [ d              , D               ]  };
  key <AC04> { [ f              , F               ]  };
  key <AC05> { [ g              , G               ]  };
  key <AC06> { [ h              , H               ]  };
  key <AC07> { [ j              , J               ]  };
  key <AC08> { [ k              , K               ]  };
  key <AC09> { [ l              , L               ]  };
  key <AC10> { [ m              , M               ]  };

  ///////////////////////////////////////////////////////////
  //
  // 4ème rangé
  //
  key <AB01> { [ w              , W               ]  };
  key <AB02> { [ x              , X               ]  };
  key <AB03> { [ c              , C               ],
               [ ccedilla       , Ccedilla        ]  };
  key <AB04> { [ v              , V               ],
               [ registered     , copyright       ]  };
  key <AB05> { [ b              , B               ]  };
  key <AB06> { [ n              , N               ]  };
};

partial hidden alphanumeric_keys
xkb_symbols "symbols" {
  ///////////////////////////////////////////////////////////
  //
  // 1ère rangé
  //
  key <TLDE> { [ eacute         , Eacute          ],
               [ 0                                ]  };
  key <AE01> { [ grave                            ],
               [ 1                                ]  };
  key <AE02> { [ agrave         , Agrave          ],
               [ 2                                ]  };
  key <AE03> { [ egrave         , Egrave          ],
               [ 3                                ]  };
  key <AE04> { [ ugrave         , Ugrave          ],
               [ 4                                ]  };
  key <AE05> { [ apostrophe                       ],
               [ 5                                ]  };
  key <AE06> { [ quotedbl                         ],
               [ 6                                ]  };
  key <AE07> { [ parenleft      , parenright      ],
               [ 7                                ]  };
  key <AE08> { [ bracketleft    , bracketright    ],
               [ 8                                ]  };
  key <AE09> { [ braceleft      , braceright      ],
               [ 9                                ]  };
  key <AE10> { [ bar            , ampersand       ]  };
  key <AE11> { [ numbersign     , percent         ]  };
  key <AE12> { [ exclam         , question        ]  };

  ///////////////////////////////////////////////////////////
  //
  // 2ème rangé
  //
  key <AD11> { [ equal          , asterisk        ],
               [ degree                           ]  };
  key <AD12> { [ minus          , plus            ]  };
  key <BKSL> { [ less           , greater         ],
               [ guillemotleft  , guillemotright  ]  };

  ///////////////////////////////////////////////////////////
  //
  // 3ème rangé
  //
  key <AC11> { [ dollar         , at              ]  };

  ///////////////////////////////////////////////////////////
  //
  // 4ème rangé
  //
  key <AB07> { [ asciitilde     , asciicircum     ]  };
  key <AB08> { [ slash          , backslash       ]  };
  key <AB09> { [ period         , colon           ]  };
  key <AB10> { [ comma          , semicolon       ]  };

  ///////////////////////////////////////////////////////////
  //
  // 5ème rangé
  //
  key <SPCE> { [ space          , underscore      ]  };
};

partial hidden alphanumeric_keys
xkb_symbols "keypad" {
  // /!\ parfois - et ? ne fonctionne plus sous kde ???

  // pour le fonctionnement normale de Num_Lock et de Pointer_EnableKeys utiliser KP_
  // Shift+Num_Lock active Pointer_EnableKeys, et une seconde fois désactive cette fonctionnalité
  // Bidouille qui marche si Num_Lock est désactivé au préalable
  // sinon Ctrl, Tab ... ne marchent plus dans KDE par exemple!
  // key <NMLK> { [ Num_Lock    , Pointer_EnableKeys ]  };
  // key <IO2>  { [ Num_Lock    , Pointer_EnableKeys ]  };

  key <KPDV> { [ slash          , slash           ]  }; // slash    KP_Divide
  key <KPMU> { [ asterisk       , asterisk        ]  }; // asterisk KP_Multiply
  key <KPSU> { [ minus          , minus           ]  }; // minus    KP_Subtract

  key <KP7>  { [ 7              , 7               ]  }; // 7        KP_7
  key <KP8>  { [ 8              , 8               ]  }; // 8        KP_8
  key <KP9>  { [ 9              , 9               ]  }; // 9        KP_9
  key <KPAD> { [ plus           , plus            ]  }; // plus     KP_Add

  key <KP4>  { [ 4              , 4               ]  }; // 4        KP_4
  key <KP5>  { [ 5              , 5               ]  }; // 5        KP_5
  key <KP6>  { [ 6              , 6               ]  }; // 6        KP_6

  key <KP1>  { [ 1              , 1               ]  }; // 1        KP_1
  key <KP2>  { [ 2              , 2               ]  }; // 2        KP_2
  key <KP3>  { [ 3              , 3               ]  }; // 3        KP_3
  key <KPEN> { [ Return         , Return          ]  }; // Return   KP_Enter

  key <KP0>  { [ 0              , 0               ]  }; // 0        KP_0
  key <KPDL> { [ KP_Decimal     , comma           ]  }; // KP_Decimal period comma 
  // key <KPDL> { [ period         , comma           ]  };

  // KP

  // key <KPDV> { [ KP_Divide      , KP_Divide       ]  };
  // key <KPMU> { [ KP_Multiply    , KP_Multiply     ]  };
  // key <KPSU> { [ KP_Subtract    , KP_Subtract     ]  };
  // 
  // key <KP7>  { [ KP_7           , KP_7            ]  };
  // key <KP8>  { [ KP_8           , KP_8            ]  };
  // key <KP9>  { [ KP_9           , KP_9            ]  };
  // key <KPAD> { [ KP_Add         , KP_Add          ]  };
  // 
  // key <KP4>  { [ KP_4           , KP_4            ]  };
  // key <KP5>  { [ KP_5           , KP_5            ]  };
  // key <KP6>  { [ KP_6           , KP_6            ]  };
  // 
  // key <KP1>  { [ KP_1           , KP_1            ]  };
  // key <KP2>  { [ KP_2           , KP_2            ]  };
  // key <KP3>  { [ KP_3           , KP_3            ]  };
  // key <KPEN> { [ KP_Enter       , KP_Enter        ]  };
  // 
  // key <KP0>  { [ KP_0           , KP_0            ]  };
  // key <KPDL> { [ KP_Decimal     , comma           ]  };
};


partial hidden alphanumeric_keys
xkb_symbols "greek" {

// a Greek_alpha, Greek_ALPHA
// b Greek_beta, Greek_BETA 
// x Greek_chi, Greek_CHI  
// d Greek_delta, Greek_DELTA
// e Greek_epsilon, Greek_EPSILON
// e Greek_eta, Greek_ETA  
// s Greek_finalsmallsigma, Greek_SIGMA
// g Greek_gamma, Greek_GAMMA
// i Greek_iota, Greek_IOTA 
// k Greek_kappa, Greek_KAPPA
// l Greek_lamda, Greek_LAMDA
// u Greek_mu, Greek_MU   
// n Greek_nu, Greek_NU   
// o Greek_omega, Greek_OMEGA
// o Greek_omicron, Greek_OMICRON
// f Greek_phi, Greek_PHI  
// p Greek_pi, Greek_PI   
// p Greek_psi, Greek_PSI  
// r Greek_rho, Greek_RHO  
// s Greek_sigma, Greek_SIGMA
// t Greek_tau, Greek_TAU  
// t Greek_theta, Greek_THETA
// y Greek_upsilon, Greek_UPSILON
// x Greek_xi, Greek_XI   
// z Greek_zeta, Greek_ZETA 

  name[Group2]="Greek";

  ///////////////////////////////////////////////////////////
  //
  // 1ère rangé
  //
  key <AD01> { symbols[Group2] = [ Greek_alpha ] }; // a α
  // key <AD03>                    Greek_epsilon    // e cf. supra
  key <AD05> { symbols[Group2] = [ Greek_theta ] }; // t θ
  key <AD07> { symbols[Group2] = [ Greek_mu    ] }; // u μ
  key <AD09> { symbols[Group2] = [ Greek_OMEGA ] }; // o Ω
  key <AD10> { symbols[Group2] = [ Greek_pi    ] }; // p π

  ///////////////////////////////////////////////////////////
  //
  // 2ème rangé
  //
  key <AC02> { symbols[Group2] = [ Greek_sigma ] }; // s σ vs ess-tsett ß
  key <AC03> { symbols[Group2] = [ Greek_delta ] }; // d δ

  ///////////////////////////////////////////////////////////
  //
  // 3ème rangé
  //

  ///////////////////////////////////////////////////////////
  //
  // 4ème rangé
  //
  key <AB05> { symbols[Group2] = [ Greek_beta  ] }; // b β

};
